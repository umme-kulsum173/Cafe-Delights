<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard</title>
    <link rel="icon" href="/images/title.png" type="image/x-ico">
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Itim&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900&display=swap');

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: "Itim", cursive;
            scroll-behavior: smooth;
        }

        body {
            font-family: 'Itim', sans-serif;
            background-color: #111;
            color: white;
            margin: 0;
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 20px;
            padding: 20px;
        }

        h1,
        h2 {
            text-align: center;
            color: #da592f;
            margin: 10px 0;
        }

        button {
            padding: 10px 20px;
            background-color: #da592f;
            color: white;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-size: 16px;
            font-weight: bold;
            transition: background-color 0.3s ease;
        }

        button:hover {
            background-color: white;
            color: #da592f;
            transition: 0.4s all;
        }

        .delete-btn {
            background-color: #dc3545;
        }

        .delete-btn:hover {
            background-color: #a71d2a;
        }

        /* Table Styles */
        .table-container {
            width: 100%;
            overflow-x: auto;
            /* Enable horizontal scrolling for smaller screens */
            margin: 20px 0;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            background: #222;
            color: white;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
            border-radius: 10px;
            overflow: hidden;
            min-width: 600px;
            /* Ensures table maintains structure */
        }

        thead {
            background-color: #da592f;
        }

        th,
        td {
            padding: 15px;
            text-align: left;
            border: 1px solid #444;
        }

        tbody tr:nth-child(even) {
            background-color: #333;
        }

        tbody tr:hover {
            background-color: #444;
        }

        th {
            text-transform: uppercase;
        }

        /* Highlighted "Order Placed" Column */
        .order-placed {
            color: white;
            font-weight: bold;
            text-align: center;
            background-color: #28a745;
            /* padding: 5px 5px; */
            border-radius: 8px;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            table {
                font-size: 14px;
            }

            th,
            td {
                padding: 10px;
            }

            button {
                font-size: 14px;
                padding: 8px 15px;
            }
        }

        @media (max-width: 480px) {
            h1 {
                font-size: 20px;
            }

            button {
                font-size: 12px;
                padding: 8px 10px;
            }

            th,
            td {
                font-size: 12px;
                padding: 8px;
            }
        }
    </style>
</head>

<body>
    <h1>Admin Dashboard</h1>
    <button id="logout" onclick="location.href='/'">Logout</button>
    <h2>Orders</h2>
    <div class="table-container">
        <table>
            <thead>
                <tr>
                    <th>Customer Name</th>
                    <th>Item Name</th>
                    <th>Total Price</th>
                    <th>Order Time</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody id="orders-list">
            </tbody>
        </table>
    </div>

    <script>

        // Fetch and display orders
        async function fetchOrders() {
            try {
                const response = await fetch('/admin/orders');
                const orders = await response.json();

                const ordersList = document.getElementById('orders-list');
                ordersList.innerHTML = ''; // Clear existing orders

                orders.forEach(order => {
                    const row = document.createElement('tr');
                    row.innerHTML = `
                        <td>${order.userName}</td> <!-- User's Name -->
                        <td>
                            ${order.items.map(item => `<p>${item.itemName} - Rs ${item.price}</p>`).join('')}
                        </td>
                        <td>Rs ${order.total}</td> <!-- Adjusted to total price -->
                        <td>${new Date(order.orderTime).toLocaleString()}</td>
                        <td>
                            <button class="delete-btn" onclick="deleteOrder('${order._id}')">Delete</button>
                        </td>
                    `;
                    ordersList.appendChild(row);
                });
            } catch (error) {
                console.error('Failed to fetch orders:', error);
            }
        }

        // Delete order functionality
        
        async function deleteOrder(orderId) {
            if (confirm('Are you sure you want to delete this order?')) {
                try {
                    const response = await fetch(`/admin/orders/${orderId}`, {
                        method: 'DELETE',
                    });

                    if (response.ok) {
                        alert('Order deleted successfully');
                        fetchOrders(); // Refresh the orders list
                    } else {
                        alert('Failed to delete the order. Please try again.');
                    }
                } catch (error) {
                    console.error('Error deleting order:', error);
                    alert('An error occurred while deleting the order.');
                }
            }
        }

        // Fetch orders when the page loads
        fetchOrders();
    </script>

</body>

</html>